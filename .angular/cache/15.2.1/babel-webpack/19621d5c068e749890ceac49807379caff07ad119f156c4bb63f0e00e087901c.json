{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data/questions-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../navbar/navbar.component\";\nconst _c0 = [\"eyeBtn\"];\nfunction InterviewQuestionsComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.displayedQuestion);\n  }\n}\nfunction InterviewQuestionsComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.displayedQuestion);\n  }\n}\nexport let InterviewQuestionsComponent = /*#__PURE__*/(() => {\n  class InterviewQuestionsComponent {\n    constructor(renderer, questionsService) {\n      this.renderer = renderer;\n      this.questionsService = questionsService;\n      this.noQuestionsMsg = 'Sorry, no questions match the selected combination of categories and difficulties!';\n      this.noAnswersMsg = '-';\n      this.congratsQuestionMsg = 'Well done, you finished all the questions!';\n      this.totalQuestions = 0;\n      this.currQuestionNumber = 0;\n      this.isAnswearHidden = true;\n      this.displayedQuestion = 'loading questions...';\n      this.displayedAnswer = '-';\n    }\n    ngOnInit() {\n      window.scrollTo(0, document.body.scrollHeight);\n      this.retrievedQuestions = this.questionsService.getCurrentQuestions();\n      if (this.retrievedQuestions == null || this.retrievedQuestions.length == 0) {\n        this.displayedQuestion = this.noQuestionsMsg;\n        this.displayedAnswer = this.noAnswersMsg;\n      } else {\n        this.displayedQuestion = this.retrievedQuestions[0]['question'];\n        this.displayedAnswer = this.retrievedQuestions[0]['answer'];\n        this.currQuestionNumber = 1;\n        this.totalQuestions = this.retrievedQuestions.length;\n      }\n    }\n    toggleEyeIcon() {\n      this.isAnswearHidden = !this.isAnswearHidden;\n      if (this.eyeBtn.nativeElement.childNodes[0].classList.contains('fa-eye')) {\n        this.renderer.removeClass(this.eyeBtn.nativeElement.childNodes[0], 'fa-eye');\n        this.renderer.addClass(this.eyeBtn.nativeElement.childNodes[0], 'fa-eye-slash');\n      } else if (this.eyeBtn.nativeElement.childNodes[0].classList.contains('fa-eye-slash')) {\n        this.renderer.removeClass(this.eyeBtn.nativeElement.childNodes[0], 'fa-eye-slash');\n        this.renderer.addClass(this.eyeBtn.nativeElement.childNodes[0], 'fa-eye');\n      }\n    }\n    getNextQuestion(currMsg) {\n      if (this.isArrNullOrEmpty(this.retrievedQuestions)) {\n        this.hideAnswer();\n        return;\n      }\n      let currIndex = this.getIndex(this.retrievedQuestions, currMsg);\n      if (currIndex > -1 && currIndex === this.retrievedQuestions.length - 1) {\n        this.displayedQuestion = this.congratsQuestionMsg;\n        this.displayedAnswer = this.noAnswersMsg;\n        this.currQuestionNumber = this.totalQuestions;\n      } else if (currIndex > -1 && currIndex < this.retrievedQuestions.length - 1) {\n        currIndex++;\n        this.displayedQuestion = this.retrievedQuestions[currIndex]['question'];\n        this.displayedAnswer = this.retrievedQuestions[currIndex]['answer'];\n        this.currQuestionNumber = ++currIndex;\n      }\n      this.hideAnswer();\n    }\n    getPreviousQuestion(currMsg) {\n      if (this.isArrNullOrEmpty(this.retrievedQuestions)) {\n        this.hideAnswer();\n        return;\n      }\n      let currIndex = this.getIndex(this.retrievedQuestions, currMsg);\n      if (currIndex > 0) {\n        currIndex--;\n        this.displayedQuestion = this.retrievedQuestions[currIndex]['question'];\n        this.displayedAnswer = this.retrievedQuestions[currIndex]['answer'];\n        this.currQuestionNumber = ++currIndex;\n      } else if (this.displayedQuestion === this.congratsQuestionMsg) {\n        currIndex = this.retrievedQuestions.length - 1;\n        this.displayedQuestion = this.retrievedQuestions[currIndex]['question'];\n        this.displayedAnswer = this.retrievedQuestions[currIndex]['answer'];\n        this.currQuestionNumber = ++currIndex;\n      }\n      this.hideAnswer();\n    }\n    getIndex(arr, question) {\n      for (let el of arr) {\n        if (el['question'] === question) {\n          return arr.indexOf(el);\n        }\n      }\n      return -1;\n    }\n    isArrNullOrEmpty(arr) {\n      if (this.retrievedQuestions == null || this.retrievedQuestions.length == 0) {\n        return true;\n      }\n      return false;\n    }\n    hideAnswer() {\n      if (this.eyeBtn.nativeElement.childNodes[0].classList.contains('fa-eye')) {\n        this.renderer.removeClass(this.eyeBtn.nativeElement.childNodes[0], 'fa-eye');\n        this.renderer.addClass(this.eyeBtn.nativeElement.childNodes[0], 'fa-eye-slash');\n        this.isAnswearHidden = !this.isAnswearHidden;\n      }\n    }\n  }\n  InterviewQuestionsComponent.ɵfac = function InterviewQuestionsComponent_Factory(t) {\n    return new (t || InterviewQuestionsComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.QuestionsDataService));\n  };\n  InterviewQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InterviewQuestionsComponent,\n    selectors: [[\"app-interview-questions\"]],\n    viewQuery: function InterviewQuestionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.eyeBtn = _t.first);\n      }\n    },\n    decls: 25,\n    vars: 6,\n    consts: [[1, \"div-main\"], [1, \"div-categories\"], [\"id\", \"btn-back\", \"routerLink\", \"/categories\", 1, \"btn\", \"btn-warning\"], [1, \"fa\", \"fa-arrow-left\"], [1, \"div-counter\", \"text-responsive\"], [\"id\", \"div-questions\", 1, \"container\"], [\"class\", \"p-questions text-responsive-smaller\", 4, \"ngIf\"], [\"class\", \"text-green p-questions text-responsive-smaller\", 4, \"ngIf\"], [\"id\", \"div-answers\", 1, \"container\"], [1, \"p-answers\", \"text-responsive-smaller\", 3, \"hidden\"], [\"id\", \"div-nav-btns\"], [1, \"btn-group\", \"btn-center\"], [\"id\", \"btn-previous\", 1, \"btn\", \"btn-nav\", 3, \"click\"], [\"id\", \"ii\", 1, \"fa\", \"fa-arrow-left\"], [1, \"btn\", \"btn-success\", \"btn-nav\", 3, \"click\"], [\"eyeBtn\", \"\"], [\"id\", \"eye\", 1, \"fa\", \"fa-eye-slash\"], [\"id\", \"btn-next\", 1, \"btn\", \"btn-nav\", 3, \"click\"], [1, \"fa\", \"fa-arrow-right\"], [1, \"p-questions\", \"text-responsive-smaller\"], [1, \"text-green\", \"p-questions\", \"text-responsive-smaller\"]],\n    template: function InterviewQuestionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"button\", 2);\n        i0.ɵɵelement(4, \"i\", 3);\n        i0.ɵɵtext(5, \" Back to categories \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵtemplate(9, InterviewQuestionsComponent_p_9_Template, 2, 1, \"p\", 6);\n        i0.ɵɵtemplate(10, InterviewQuestionsComponent_p_10_Template, 2, 1, \"p\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"p\", 9);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\", 11)(16, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function InterviewQuestionsComponent_Template_button_click_16_listener() {\n          return ctx.getPreviousQuestion(ctx.displayedQuestion);\n        });\n        i0.ɵɵelement(17, \"i\", 13);\n        i0.ɵɵtext(18, \" Previous \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 14, 15);\n        i0.ɵɵlistener(\"click\", function InterviewQuestionsComponent_Template_button_click_19_listener() {\n          return ctx.toggleEyeIcon();\n        });\n        i0.ɵɵelement(21, \"i\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function InterviewQuestionsComponent_Template_button_click_22_listener() {\n          return ctx.getNextQuestion(ctx.displayedQuestion);\n        });\n        i0.ɵɵtext(23, \"Next \");\n        i0.ɵɵelement(24, \"i\", 18);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate2(\" \", ctx.currQuestionNumber, \"/\", ctx.totalQuestions, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayedQuestion != ctx.congratsQuestionMsg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayedQuestion == ctx.congratsQuestionMsg);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.isAnswearHidden);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.displayedAnswer);\n      }\n    },\n    dependencies: [i2.NgIf, i3.RouterLink, i4.NavbarComponent],\n    styles: [\".div-main[_ngcontent-%COMP%]{width:100%;height:91%}.btn-center[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;height:100%}.btn-nav[_ngcontent-%COMP%]{max-width:15%}.div-categories[_ngcontent-%COMP%]{border-bottom:solid 1px black;position:relative;width:100%;height:13%;min-height:89px}.div-counter[_ngcontent-%COMP%]{display:table;margin:0 auto}.p-questions[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle;max-width:100%;word-wrap:break-word;text-align:justify;text-justify:inter-word;text-align-last:center}.text-green[_ngcontent-%COMP%]{color:green}.p-answers[_ngcontent-%COMP%]{display:table-cell;vertical-align:middle;max-width:100%;word-wrap:break-word;text-align:justify;text-justify:inter-word;text-align-last:center;white-space:pre-wrap}#eye[_ngcontent-%COMP%]{pointer-events:none}#btn-previous[_ngcontent-%COMP%], #btn-next[_ngcontent-%COMP%]{background-color:#888}#btn-back[_ngcontent-%COMP%]{margin-left:0}#div-questions[_ngcontent-%COMP%]{display:table;table-layout:fixed;height:37%;border-bottom:solid 1px black;max-width:100%;min-height:180px}#div-answers[_ngcontent-%COMP%]{display:table;table-layout:fixed;height:47%;max-width:100%;min-height:200px}#div-nav-btns[_ngcontent-%COMP%]{border-top:solid 1px black;height:7%;min-height:45px}@media only screen and (max-height: 700px){#div-nav-btns[_ngcontent-%COMP%]{height:8%}}@media only screen and (max-height: 500px){#div-nav-btns[_ngcontent-%COMP%]{height:10%}}@media only screen and (max-height: 350px){#div-nav-btns[_ngcontent-%COMP%]{height:15%}}@media only screen and (max-height: 150px){#div-nav-btns[_ngcontent-%COMP%]{height:22%}}@media only screen and (max-width: 1160px){.btn-nav[_ngcontent-%COMP%]{max-width:none}}.text-responsive[_ngcontent-%COMP%]{font-size:1.75rem}@media (min-width: 576px){.text-responsive[_ngcontent-%COMP%]{font-size:1.75rem}.text-responsive-smaller[_ngcontent-%COMP%]{font-size:1rem}}@media (min-width: 768px){.text-responsive[_ngcontent-%COMP%]{font-size:1.75rem}.text-responsive-smaller[_ngcontent-%COMP%]{font-size:1.25rem}}@media (min-width: 992px){.text-responsive[_ngcontent-%COMP%]{font-size:1.75rem}.text-responsive-smaller[_ngcontent-%COMP%]{font-size:1.5rem}}@media (min-width: 1200px){.text-responsive[_ngcontent-%COMP%]{font-size:2rem}.text-responsive-smaller[_ngcontent-%COMP%]{font-size:1.75rem}}\"]\n  });\n  return InterviewQuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}